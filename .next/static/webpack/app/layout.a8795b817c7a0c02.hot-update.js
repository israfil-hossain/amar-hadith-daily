"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./providers/AuthProvider.tsx":
/*!************************************!*\
  !*** ./providers/AuthProvider.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n/* eslint-disable @typescript-eslint/no-explicit-any */ /* eslint-disable react-refresh/only-export-components */ /* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [initialized, setInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const createProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[createProfile]\": async (userId, userEmail, fullName)=>{\n            try {\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('profiles').insert({\n                    id: userId,\n                    email: userEmail,\n                    full_name: fullName || '',\n                    role: 'user',\n                    is_verified: false,\n                    streak_count: 0,\n                    total_hadith_read: 0,\n                    total_contributions: 0,\n                    points: 0,\n                    level: 1,\n                    preferred_language: 'bn',\n                    notification_settings: {\n                        email: true,\n                        push: true,\n                        prayer_reminders: true\n                    },\n                    privacy_settings: {\n                        profile_public: true,\n                        progress_public: true\n                    }\n                }).select().single();\n                if (error) {\n                    console.error('Error creating profile:', error);\n                    return null;\n                }\n                console.log('Profile created successfully:', data);\n                setProfile(data);\n                return data;\n            } catch (error) {\n                console.error('Error creating profile:', error);\n                return null;\n            }\n        }\n    }[\"AuthProvider.useCallback[createProfile]\"], []);\n    const fetchProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[fetchProfile]\": async (userId)=>{\n            try {\n                console.log('Fetching profile for user:', userId);\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('profiles').select('*').eq('id', userId).maybeSingle();\n                if (error) {\n                    console.error('Error fetching profile:', error);\n                    // If profile doesn't exist, create it\n                    if (error.code === 'PGRST116') {\n                        console.log('Profile not found, creating new profile...');\n                        const { data: { user } } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getUser();\n                        console.log('User data for profile creation:', user);\n                        if (user) {\n                            var _user_user_metadata;\n                            await createProfile(userId, user.email, ((_user_user_metadata = user.user_metadata) === null || _user_user_metadata === void 0 ? void 0 : _user_user_metadata.full_name) || '');\n                        }\n                        return;\n                    }\n                    return;\n                }\n                console.log('Profile fetched successfully:', data);\n                setProfile(data);\n            } catch (error) {\n                console.error('Error fetching profile:', error);\n            }\n        }\n    }[\"AuthProvider.useCallback[fetchProfile]\"], [\n        createProfile\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Get initial session with error handling\n            const getInitialSession = {\n                \"AuthProvider.useEffect.getInitialSession\": async ()=>{\n                    try {\n                        const { data: { session }, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n                        if (error) {\n                            console.error('Error getting session:', error);\n                            setLoading(false);\n                            return;\n                        }\n                        setSession(session);\n                        var _session_user;\n                        setUser((_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : null);\n                        if (session === null || session === void 0 ? void 0 : session.user) {\n                            await fetchProfile(session.user.id);\n                        }\n                        setLoading(false);\n                        setInitialized(true);\n                    } catch (error) {\n                        console.error('Auth initialization error:', error);\n                        setLoading(false);\n                        setInitialized(true);\n                    }\n                }\n            }[\"AuthProvider.useEffect.getInitialSession\"];\n            // Add timeout to prevent infinite loading\n            const timeoutId = setTimeout({\n                \"AuthProvider.useEffect.timeoutId\": ()=>{\n                    if (!initialized) {\n                        console.warn('Auth initialization timeout, proceeding without auth');\n                        setLoading(false);\n                        setInitialized(true);\n                    }\n                }\n            }[\"AuthProvider.useEffect.timeoutId\"], 5000) // 5 second timeout\n            ;\n            getInitialSession();\n            // Listen for auth changes\n            const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.onAuthStateChange({\n                \"AuthProvider.useEffect\": async (_event, session)=>{\n                    setSession(session);\n                    var _session_user;\n                    setUser((_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : null);\n                    if (session === null || session === void 0 ? void 0 : session.user) {\n                        await fetchProfile(session.user.id);\n                    } else {\n                        setProfile(null);\n                    }\n                }\n            }[\"AuthProvider.useEffect\"]);\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    clearTimeout(timeoutId);\n                    subscription.unsubscribe();\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        fetchProfile,\n        initialized\n    ]);\n    const signUp = async (email, password, fullName)=>{\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signUp({\n            email,\n            password,\n            options: {\n                data: {\n                    full_name: fullName\n                },\n                emailRedirectTo: undefined // Disable email confirmation\n            }\n        });\n        // Send welcome email\n        if (data.user && !error) {\n            try {\n                await fetch('/api/email/welcome', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        userEmail: email,\n                        userName: fullName\n                    })\n                });\n            } catch (emailError) {\n                console.error('Failed to send welcome email:', emailError);\n            // Don't fail the signup if email fails\n            }\n        }\n        return {\n            data,\n            error\n        };\n    };\n    const signIn = async (email, password)=>{\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n        return {\n            data,\n            error\n        };\n    };\n    const signInWithGoogle = async ()=>{\n        try {\n            console.log('Attempting Google OAuth...');\n            console.log('Redirect URL:', \"\".concat(window.location.origin, \"/auth/callback\"));\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signInWithOAuth({\n                provider: 'google',\n                options: {\n                    redirectTo: \"\".concat(window.location.origin, \"/auth/callback\"),\n                    queryParams: {\n                        access_type: 'offline',\n                        prompt: 'consent'\n                    }\n                }\n            });\n            if (error) {\n                console.error('Google OAuth Error:', error);\n                throw error;\n            }\n            console.log('Google OAuth initiated successfully:', data);\n            return {\n                data,\n                error\n            };\n        } catch (error) {\n            console.error('Google OAuth Exception:', error);\n            return {\n                data: null,\n                error\n            };\n        }\n    };\n    const signOut = async ()=>{\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.signOut();\n        if (error) {\n            console.error('Error signing out:', error);\n        }\n    };\n    const updateProfile = async (updates)=>{\n        if (!user) return {\n            data: null,\n            error: 'No user logged in'\n        };\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from('profiles').update(updates).eq('id', user.id).select().single();\n        if (data) {\n            setProfile(data);\n        }\n        return {\n            data,\n            error\n        };\n    };\n    const value = {\n        user,\n        profile,\n        session,\n        loading,\n        signUp,\n        signIn,\n        signInWithGoogle,\n        signOut,\n        updateProfile\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/israfil/flowentech/saas/amar-hadith-daily/providers/AuthProvider.tsx\",\n        lineNumber: 274,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"ABPfsK4zNL/kEHqOQxV3S6EbUg0=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./providers/AuthProvider.tsx\n"));

/***/ })

});